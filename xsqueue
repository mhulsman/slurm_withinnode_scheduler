#!/usr/bin/env python
import xslurm_shared
import getpass
import socket, httplib
import argparse

s = xslurm_shared.TimeoutServerProxy(xslurm_shared.job_url, allow_none = True)

parser = argparse.ArgumentParser(description='XSlurm Job queue listing')
parser.add_argument('--all', action='store_true', help='Show also completed jobs.')
parser.add_argument('--done', action='store_true', help='Show only completed jobs.')
args = parser.parse_args()
try:
    if args.done:
        jobs = s.list_done_jobs()
    elif args.all:
        jobs = s.list_done_jobs() + s.list_jobs()
    else:
        jobs = s.list_jobs()
    user = getpass.getuser()
    
    print "JOBID\tPARTITION\tNAME\tUSER\tST\tTIME\tCORES\tNODES"
    for jobid, job_name, state, runtime, cpus, node in jobs:
        days = 0
        hours = 0
        minutes = 0
        while runtime > (24 * 60 * 60):
            days += 1
            runtime -= 24 * 60 * 60
        while runtime > 60 * 60:
            hours += 1
            runtime -= 60 * 60
        while runtime > 60:
            minutes += 1
            runtime -= 60
        seconds = runtime
        runtime = '%d:%d:%d' % ( hours, minutes, seconds)
        if days > 0:
            runtime = ('%d-' % days) + runtime

        print '%s\tnormal\t%s\t%s\t%s\t%s\t%d\t%s' % (jobid, job_name, user, state, runtime, cpus, node)

except (socket.error, httplib.HTTPException), serror:
    print 'Queue request failed, could not connect to XSlurm manager on ' + xslurm_shared.job_url
